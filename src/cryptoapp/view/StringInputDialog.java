/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cryptoapp.view;

import co.edu.unal.crypto.tools.CharStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;

/**
 *
 * @author eduarc
 */
public class StringInputDialog extends javax.swing.JDialog {

    /**
     * Creates new form InputDialog
     * @param parent
     * @param modal
     */
    public StringInputDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bFile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaInput = new javax.swing.JTextPane();
        bAccept = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Input");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(0, 0, 0));
        setModal(true);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);

        bFile.setText("Load File");
        bFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFileActionPerformed(evt);
            }
        });

        areaInput.setBackground(new java.awt.Color(0, 0, 0));
        areaInput.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        areaInput.setForeground(new java.awt.Color(204, 204, 204));
        areaInput.setCaretColor(new java.awt.Color(204, 204, 204));
        areaInput.setSelectionColor(new java.awt.Color(102, 102, 102));
        areaInput.setSelectedTextColor(java.awt.Color.BLACK);
        jScrollPane1.setViewportView(areaInput);

        bAccept.setText("Accept");
        bAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAcceptActionPerformed(evt);
            }
        });

        bCancel.setText("Cancel");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 214, Short.MAX_VALUE)
                        .addComponent(bCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bAccept))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAccept)
                    .addComponent(bFile)
                    .addComponent(bCancel)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAcceptActionPerformed
        // TODO add your handli
        input = areaInput.getText();
        this.dispose();
    }//GEN-LAST:event_bAcceptActionPerformed

    private void bFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFileActionPerformed
        
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Select the input file");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File f = fileChooser.getSelectedFile();
            try {
                Character[] data = CharStream.fread(f);
                append(data);
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "File not found!", "Error", JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error while reading the file", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_bFileActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        
        input = null;
        this.dispose();
    }//GEN-LAST:event_bCancelActionPerformed

    public void append(Character[] data) {
        
        Document doc = areaInput.getDocument();
        for (Character c : data) {
            try {
                areaInput.getDocument().insertString(doc.getEndPosition().getOffset(), c+"", null);
            } catch (BadLocationException ex) {
                JOptionPane.showMessageDialog(this, "Cannot display the data in the text pane!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
    }
    
    public String showDialog(String title) {
        
        this.setTitle(title);
        this.setLocationRelativeTo(super.getParent());
        this.setVisible(true);
        return input;
    }
    
    public String input;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextPane areaInput;
    public javax.swing.JButton bAccept;
    private javax.swing.JButton bCancel;
    public javax.swing.JButton bFile;
    public javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
